# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'register_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class RegisterDialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(564, 403)
        self.formLayoutWidget = QtWidgets.QWidget(Dialog)
        self.formLayoutWidget.setGeometry(QtCore.QRect(50, 140, 451, 201))
        self.formLayoutWidget.setObjectName("formLayoutWidget")
        self.formLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.formLayout.setLabelAlignment(QtCore.Qt.AlignCenter)
        self.formLayout.setFormAlignment(QtCore.Qt.AlignCenter)
        self.formLayout.setContentsMargins(0, 0, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.clsLabel = QtWidgets.QLabel(self.formLayoutWidget)
        self.clsLabel.setObjectName("clsLabel")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.clsLabel)
        self.comboBox = QtWidgets.QComboBox(self.formLayoutWidget)
        self.comboBox.setMaximumSize(QtCore.QSize(350, 20))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.comboBox)
        self.nameEdit = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.nameEdit.setMaximumSize(QtCore.QSize(350, 16777215))
        self.nameEdit.setObjectName("nameEdit")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.nameEdit)
        self.nameLabel = QtWidgets.QLabel(self.formLayoutWidget)
        self.nameLabel.setObjectName("nameLabel")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.nameLabel)
        self.pwdEdit = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.pwdEdit.setMaximumSize(QtCore.QSize(350, 16777215))
        self.pwdEdit.setObjectName("pwdEdit")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.pwdEdit)
        self.pwdLabel = QtWidgets.QLabel(self.formLayoutWidget)
        self.pwdLabel.setObjectName("pwdLabel")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.pwdLabel)
        self.cfmpwdEdit = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.cfmpwdEdit.setMaximumSize(QtCore.QSize(350, 16777215))
        self.cfmpwdEdit.setObjectName("cfmpwdEdit")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.cfmpwdEdit)
        self.cfmpwdLabel = QtWidgets.QLabel(self.formLayoutWidget)
        self.cfmpwdLabel.setObjectName("cfmpwdLabel")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.cfmpwdLabel)
        self.label_8 = QtWidgets.QLabel(self.formLayoutWidget)
        self.label_8.setMinimumSize(QtCore.QSize(0, 30))
        self.label_8.setMaximumSize(QtCore.QSize(16777215, 30))
        self.label_8.setObjectName("label_8")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.SpanningRole, self.label_8)
        self.realNameEdit = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.realNameEdit.setMaximumSize(QtCore.QSize(350, 16777215))
        self.realNameEdit.setObjectName("realNameEdit")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.realNameEdit)
        self.realNameLabel = QtWidgets.QLabel(self.formLayoutWidget)
        self.realNameLabel.setObjectName("realNameLabel")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.realNameLabel)
        self.phoneEdit = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.phoneEdit.setMaximumSize(QtCore.QSize(350, 16777215))
        self.phoneEdit.setObjectName("phoneEdit")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.phoneEdit)
        self.phoneLabel = QtWidgets.QLabel(self.formLayoutWidget)
        self.phoneLabel.setObjectName("phoneLabel")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.phoneLabel)
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(0, 0, 561, 121))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(":/png/images/login_topbg.png"))
        self.label.setObjectName("label")
        self.gridLayoutWidget = QtWidgets.QWidget(Dialog)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 350, 561, 41))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.cancelButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.cancelButton.setMinimumSize(QtCore.QSize(100, 30))
        self.cancelButton.setObjectName("cancelButton")
        self.gridLayout.addWidget(self.cancelButton, 0, 3, 1, 1)
        self.okButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.okButton.setMinimumSize(QtCore.QSize(100, 30))
        self.okButton.setObjectName("okButton")
        self.gridLayout.addWidget(self.okButton, 0, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(80, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 0, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 0, 2, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(80, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 0, 4, 1, 1)

        self.retranslateUi(Dialog)
        self.okButton.clicked.connect(self.register)
        self.cancelButton.clicked.connect(self.close)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.clsLabel.setText(_translate("Dialog", "用户类别："))
        self.comboBox.setItemText(0, _translate("Dialog", "普通用户"))
        self.comboBox.setItemText(1, _translate("Dialog", "食堂管理员"))
        self.comboBox.setItemText(2, _translate("Dialog", "商家"))
        self.comboBox.setItemText(3, _translate("Dialog", "派送员"))
        self.nameLabel.setText(_translate("Dialog", "用户名："))
        self.pwdLabel.setText(_translate("Dialog", "密码："))
        self.cfmpwdLabel.setText(_translate("Dialog", "确认密码："))
        self.label_8.setText(_translate("Dialog", "（注意，注册非普通用户必须在下方填写真实姓名和电话号码！）"))
        self.realNameLabel.setText(_translate("Dialog", "姓名："))
        self.phoneLabel.setText(_translate("Dialog", "电话："))
        self.cancelButton.setText(_translate("Dialog", "取消"))
        self.okButton.setText(_translate("Dialog", "确定"))

    def register(self):
        usr_name = self.nameEdit.text()
        usr_pwd = self.pwdEdit.text()
        usr_cfmpwd = self.cfmpwdEdit.text()
        usr_rname = self.realNameEdit.text()
        usr_phone = self.phoneEdit.text()
        self.cls_idx = self.comboBox.currentIndex()
        cls_dict = {0: "plaininfo", 1: "managerinfo", 2: "merchantinfo", 3: "courierinfo"}
        cls = cls_dict[self.cls_idx]

        # 数据库操作部分
        import pymysql
        db = pymysql.connect(host="localhost",
                             user="root",
                             password="zxq1314mm",
                             database="canteen",
                             port=3306,
                             charset="utf8")
        cursor = db.cursor()
        cursor.execute("select * from userinfo")
        usr_info = cursor.fetchall()
        repeat_flag = False
        for i in range(cursor.rowcount):
            if usr_name == usr_info[i][0]:
                repeat_flag = True
                break
        if repeat_flag:
            QMessageBox.warning(None, "用户名重复", "您输入的用户名已存在，请重新输入！", QMessageBox.Ok)
        elif usr_pwd != usr_cfmpwd:
            QMessageBox.warning(None, "两次密码不一致", "两次输入的密码不一致，请重新输入！", QMessageBox.Ok)
        elif len(usr_name) == 0 or len(usr_pwd) == 0 or len(usr_cfmpwd) == 0:
            QMessageBox.warning(None, "用户名密码为空", "用户名和密码都不能为空，请重新输入！", QMessageBox.Ok)
        else:
            if self.cls_idx != 0 and (len(usr_rname) == 0 or len(usr_phone) == 0):
                # 非普通用户要填写姓名和电话信息
                QMessageBox.warning(None, "姓名或电话为空", "非普通用户姓名电话都不能为空，请重新输入！", QMessageBox.Ok)
            else:
                try:
                    if self.cls_idx != 0:
                        cursor.execute("insert into {}({}_name,{}_phone) values(%s,%s)".format(cls, cls[:2], cls[:2]),
                                       [usr_rname, usr_phone])
                    cursor.execute("insert into userinfo(u_name, u_pwd, u_class) values(%s,%s,%s)",
                                   [usr_name, usr_pwd, cls[:-4]])
                    db.commit()
                    self.openUserSelCanteen()
                    self.close()
                except:
                    # 发生错误时回滚
                    QMessageBox.warning(None, "数据库出错", "抱歉，数据库操作出现错误，请重试！", QMessageBox.Ok)
                    db.rollback()
        db.close()
        # 数据库操作结束

    def show(self):
        self.window = QtWidgets.QWidget()
        self.setupUi(self.window)
        self.window.show()

    def close(self):
        self.window.close()

    def openSelCanteen(self):
        import user_menu
        import manager_select_canteen
        import merchant_select_shop
        import courier_check_order
        if self.cls_idx == 0:
            self.usc = user_menu.UserMenu()
            self.usc.show(self.nameEdit.text())
        elif self.cls_idx == 1:
            self.masc = manager_select_canteen.ManagerSelCanteen()
            self.masc.show()
        elif self.cls_idx == 2:
            self.mesc = merchant_select_shop.MerchantSelShop()
            self.mesc.show()
        elif self.cls_idx == 3:
            self.cco = courier_check_order.CouCheckOrder()
            self.cco.show()
import login_topbg_rc
